# Generated by Django 5.0.6 on 2024-06-26 02:27

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('donor_id', models.AutoField(help_text='Unique identifier for the donor.', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the donor.', max_length=255)),
                ('contact_info', models.CharField(help_text='Contact information of the donor.', max_length=255)),
                ('address', models.TextField(help_text='Address of the donor.')),
                ('email', models.EmailField(db_index=True, help_text='Email address of the donor.', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(help_text='Phone number of the donor.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('warehouse_number', models.IntegerField(help_text='Physical identifier for the warehouse, not randomly generated.', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the warehouse.', max_length=255)),
                ('country', models.CharField(help_text='Country where the warehouse is located.', max_length=100)),
                ('city', models.CharField(help_text='City where the warehouse is located.', max_length=100)),
                ('postal_code', models.CharField(help_text="Postal code of the warehouse's location.", max_length=20)),
                ('phone', models.CharField(help_text='Phone number of the warehouse.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the device.', primary_key=True, serialize=False)),
                ('type', models.CharField(help_text='Type of the device.', max_length=100)),
                ('make', models.CharField(help_text='Make of the device.', max_length=100)),
                ('model', models.CharField(help_text='Model of the device.', max_length=100)),
                ('serial_number', models.CharField(db_index=True, help_text='Serial number of the device (unique identifier).', max_length=100, unique=True)),
                ('mac_id', models.CharField(db_index=True, help_text='MAC ID of the device (unique identifier).', max_length=100, unique=True)),
                ('year_of_manufacture', models.IntegerField(help_text='Year of manufacture of the device.')),
                ('shipment_date', models.DateField(help_text='Date when the device was shipped.')),
                ('date_received', models.DateField(help_text='Date when the device was received.')),
                ('physical_condition', models.CharField(help_text='Physical condition of the device.', max_length=100)),
                ('specifications', models.TextField(help_text='Specifications of the device.')),
                ('operating_system', models.CharField(help_text='Operating system of the device.', max_length=100)),
                ('accessories', models.TextField(help_text='Accessories of the device.')),
                ('date_of_donation', models.DateField(help_text='Date when the device was donated.')),
                ('value', models.DecimalField(decimal_places=2, help_text='Value of the device, provided by accounting.', max_digits=10)),
                ('status', models.CharField(help_text='Status of the device.', max_length=100)),
                ('distributor', models.CharField(help_text='Distributor of the device.', max_length=100)),
                ('warranty_service_info', models.TextField(help_text='Warranty and service information of the device.')),
                ('notes', models.TextField(help_text='Additional notes about the device.')),
                ('assigned_user', models.ForeignKey(help_text='User to whom the device is assigned.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_devices', to='users.user')),
                ('received_by', models.ForeignKey(help_text='User who received the device.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_devices', to='users.user')),
                ('donor', models.ForeignKey(help_text='Donor of the device.', on_delete=django.db.models.deletion.CASCADE, to='devices.donor')),
                ('location', models.ForeignKey(help_text='Location of the device in the warehouse.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='devices.warehouse')),
            ],
        ),
    ]
